!function(n) {
    function r(e) {
        if (a[e]) return a[e].exports;
        var t = a[e] = {
            exports: {},
            id: e,
            loaded: !1
        };
        return n[e].call(t.exports, t, t.exports, r), t.loaded = !0, t.exports;
    }
    var a = {};
    return r.m = n, r.c = a, r.p = "./dist/", r(0);
}([ /*!*****************!*\
  !*** multi app ***!
  \*****************/
function(n, r, a) {
    a(/*! D:\developpement\flagwarriors\src\lang.js */ 1), a(/*! D:\developpement\flagwarriors\src\animationHandler.js */ 4), 
    a(/*! D:\developpement\flagwarriors\src\states\Preload.js */ 6), a(/*! D:\developpement\flagwarriors\src\states\Menu.js */ 8), 
    a(/*! D:\developpement\flagwarriors\src\states\Game.js */ 10), a(/*! D:\developpement\flagwarriors\src\states\GameOver.js */ 12), 
    a(/*! D:\developpement\flagwarriors\src\states\Language.js */ 14), a(/*! D:\developpement\flagwarriors\src\entites\Caracter.js */ 16), 
    a(/*! D:\developpement\flagwarriors\src\entites\Ennemy.js */ 18), a(/*! D:\developpement\flagwarriors\src\entites\Map.js */ 20), 
    a(/*! D:\developpement\flagwarriors\src\entites\Tower.js */ 22), a(/*! D:\developpement\flagwarriors\src\main.js */ 24), 
    n.exports = a(/*! D:\developpement\flagwarriors\src\socketHandler.js */ 26);
}, /*!*********************!*\
  !*** ./src/lang.js ***!
  \*********************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/lang.js */ 3));
}, /*!***************************************!*\
  !*** ../~/script-loader/addScript.js ***!
  \***************************************/
function(n, r) {
    n.exports = function(n) {
        "undefined" != typeof execScript ? execScript(n) : eval.call(null, n);
    };
}, /*!*************************************!*\
  !*** ../~/raw-loader!./src/lang.js ***!
  \*************************************/
function(n, r) {
    n.exports = 'var fr = {\r\n    LOADING: "Chargement...",\r\n    LANGUAGE: "Language",\r\n    FR: "Français",\r\n    EN: "English",\r\n    RETURN: \'return\',\r\n    NO_CONNECTION: "Network issues",\r\n    PLAY: "Rejoindre une partie",\r\n    WAITING_MENU: "Attente d\\\'une partie...",\r\n    WAITING_READY: "L\\\'adversaire n\\\'est pas encore prêt\\nVeuillez patienter...",\r\n    WIN: "Vous avez GAGNÉ !",\r\n    LOOSE: "Vous avez perdu...",\r\n    READY: "Prêt"\r\n};\r\n\r\nvar en = {\r\n    LOADING: "Loading...",\r\n    LANGUAGE: "Language",\r\n    FR: "Français",\r\n    EN: "English",\r\n    RETURN: \'Back\',\r\n    NO_CONNECTION: "Pas de connexion",\r\n    PLAY: "Play",\r\n    WAITING_MENU: "Waiting for a game...",\r\n    WAITING_READY: "Waiting for the other dude\\nto be ready...",\r\n    WIN: "You WIN !",\r\n    LOOSE: "You loose...",\r\n    READY: "Ready"\r\n};';
}, /*!*********************************!*\
  !*** ./src/animationHandler.js ***!
  \*********************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/animationHandler.js */ 5));
}, /*!*************************************************!*\
  !*** ../~/raw-loader!./src/animationHandler.js ***!
  \*************************************************/
function(n, r) {
    n.exports = "function walkAnimation(caracter, path0x, path1x, path0y, path1y) {\r\n    if (path0x / 32 * 32 > path1x / 32 * 32 && path0y / 16 * 16 > path1y / 16 * 16) {\r\n        caracter.animations.play('west', 10, false);\r\n    }\r\n    else if (path0x / 32 * 32 > path1x / 32 * 32 && path0y / 16 * 16 < path1y / 16 * 16) {\r\n        caracter.animations.play('north', 10, false);\r\n    }\r\n    else if (path0x / 32 * 32 < path1x / 32 * 32 && path0y / 16 * 16 < path1y / 16 * 16) {\r\n        caracter.animations.play('north', 10, false);\r\n    }\r\n    else if (path0x / 32 * 32 < path1x / 32 * 32 && path0y / 16 * 16 > path1y / 16 * 16) {\r\n        caracter.animations.play('east', 10, false);\r\n    }\r\n    else if (path0x / 32 * 32 == path1x / 32 * 32 && path0y / 16 * 16 > path1y / 16 * 16) {\r\n        caracter.animations.play('north', 10, false);\r\n    }\r\n    else if (path0x / 32 * 32 == path1x / 32 * 32 && path0y / 16 * 16 < path1y / 16 * 16) {\r\n        caracter.animations.play('south', 10, false);\r\n    }\r\n    else if (path0x / 32 * 32 > path1x / 32 * 32 && path0y / 16 * 16 == path1y / 16 * 16) {\r\n        caracter.animations.play('east', 10, false);\r\n    }\r\n    else if (path0x / 32 * 32 < path1x / 32 * 32 && path0y / 16 * 16 == path1y / 16 * 16) {\r\n        caracter.animations.play('west', 10, false);\r\n    }\r\n}\r\n\r\nfunction fightAnimation(caracter, ennemy) {\r\n    if (caracter.x > ennemy.x && caracter.y > ennemy.y) {\r\n        caracter.animations.play('eattack', 10, false);\r\n    }\r\n    else if (caracter.x > ennemy.x && caracter.y < ennemy.y) {\r\n        caracter.animations.play('sattack', 10, false);\r\n    }\r\n    else if (caracter.x < ennemy.x && caracter.y < ennemy.y) {\r\n        caracter.animations.play('sattack', 10, false);\r\n    }\r\n    else if (caracter.x < ennemy.x && caracter.y > ennemy.y) {\r\n        caracter.animations.play('wattack', 10, false);\r\n    }\r\n    else if (caracter.x == ennemy.x && caracter.y > ennemy.y) {\r\n        caracter.animations.play('sattack', 10, false);\r\n    }\r\n    else if (caracter.x == ennemy.x && caracter.y < ennemy.y) {\r\n        caracter.animations.play('nattack', 10, false);\r\n    }\r\n    else if (caracter.x > ennemy.x && caracter.y == ennemy.y) {\r\n        caracter.animations.play('wattack', 10, false);\r\n    }\r\n    else if (caracter.x < ennemy.x && caracter.y == ennemy.y) {\r\n        caracter.animations.play('eattack', 10, false);\r\n    }\r\n}\r\n\r\nfunction swordSound() {\r\n    var rd = Math.random();\r\n    switch (Math.round(rd*10)) {\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n            sword1.play();\r\n            break;\r\n        case 4:\r\n        case 5:\r\n        case 6:\r\n            sword2.play();\r\n            break;\r\n        case 7:\r\n        case 8:\r\n        case 9:\r\n            pare.play();\r\n            break;\r\n    }\r\n}\r\n";
}, /*!*******************************!*\
  !*** ./src/states/Preload.js ***!
  \*******************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/states/Preload.js */ 7));
}, /*!***********************************************!*\
  !*** ../~/raw-loader!./src/states/Preload.js ***!
  \***********************************************/
function(n, r) {
    n.exports = "paper = {};\r\npaper.Preload = function () {\r\n    this.loadtext;\r\n};\r\nWebFontConfig = {\r\n    google: {\r\n        families: ['Almendra']\r\n    }\r\n};\r\n\r\npaper.Preload.prototype = {\r\n\r\n    create: function () {\r\n        this.game.load.script('webfont', './webfont.js');\r\n        //scaling options\r\n        this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n        this.scale.pageAlignHorizontally = true;\r\n        this.scale.pageAlignVertically = true;\r\n        this.scale.setScreenSize;\r\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n\r\n        this.loadText = this.add.text(paper.game.world.centerX / 2, paper.game.world.centerY, 'Chargement...', {fill: '#ffffff'});\r\n        this.load.onFileComplete.add(this.fileComplete, this);\r\n        this.load.onLoadComplete.add(this.loadComplete, this);\r\n\r\n        this.startLoad();\r\n    },\r\n\r\n    startLoad: function () {\r\n\r\n        this.load.spritesheet('warrior', 'assets/warrior.png', 32, 32, 40);\r\n        this.load.spritesheet('blueWarrior', 'assets/blueWarriors.png', 32, 32, 40);\r\n        this.load.spritesheet('flags', 'assets/flags.png', 16, 16);\r\n        this.load.spritesheet('skeleton', 'assets/skeleton.png', 32, 32);\r\n        this.load.spritesheet('kaboom', 'assets/explode.png', 128, 128);\r\n        this.load.spritesheet('sound', 'assets/sound.png', 32, 32);\r\n        this.load.image('walle', 'assets/wall2.png');\r\n        this.load.image('tile', 'assets/empty.png');\r\n        this.load.image('tower', 'assets/tower.png');\r\n        this.load.image('arrow', 'assets/arrow.png');\r\n        this.load.image('background', 'assets/bg.png');\r\n        this.load.image('paper', 'assets/paper.png');\r\n        this.load.image('start', 'assets/start.png');\r\n        this.load.image('ready', 'assets/contour.png');\r\n        this.load.audio('ambiance', 'assets/ambiance.mp3');\r\n        this.load.audio('start', 'assets/start.mp3');\r\n        this.load.audio('canon', 'assets/canon.mp3');\r\n        this.load.audio('explosion', 'assets/explosion.mp3');\r\n        this.load.audio('sword1', 'assets/sword1.mp3');\r\n        this.load.audio('sword2', 'assets/sword2.mp3');\r\n        this.load.audio('pare', 'assets/pare.mp3');\r\n\r\n\r\n        this.load.start();\r\n    },\r\n\r\n    fileComplete: function (progress, cacheKey, success, totalLoaded, totalFiles) {\r\n        this.loadText.setText(\"Chargement \" + progress + \"%\");\r\n    },\r\n\r\n    loadComplete: function () {\r\n        this.state.start('Menu');\r\n    }\r\n}\r\n";
}, /*!****************************!*\
  !*** ./src/states/Menu.js ***!
  \****************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/states/Menu.js */ 9));
}, /*!********************************************!*\
  !*** ../~/raw-loader!./src/states/Menu.js ***!
  \********************************************/
function(n, r) {
    n.exports = "paper.Menu = function () {\r\n};\r\nvar button, start, ambiance, langButton, soundFlag = true;\r\n\r\npaper.Menu.prototype = {\r\n\r\n    create: function () {\r\n        var background = this.add.image(0, 0, 'paper');\r\n        if (soundFlag)\r\n            ambiance = this.add.audio('ambiance');\r\n        start = this.add.audio('start');\r\n        if (sound && soundFlag)\r\n            ambiance.play();\r\n        soundFlag = false;\r\n        button = this.add.button(paper.game.world.centerX, paper.game.world.centerY, 'start', this.start, this);\r\n        button.anchor.setTo(0.5);\r\n        var msg = paper.game.add.text(paper.game.world.centerX, paper.game.world.centerY + 100, paper.game.msg, {fill: '#000000'});\r\n        msg.anchor.setTo(0.5);\r\n\r\n        langButton = paper.game.add.text(10, 7, lang.LANGUAGE, {fill: '#000000', font: 'bold 20px Almendra'});\r\n        paper.game.physics.arcade.enable(langButton);\r\n        langButton.inputEnabled = true;\r\n        langButton.events.onInputDown.add(function () {\r\n            this.state.start('Language');\r\n        }, this);\r\n\r\n        var soundButton = this.add.button(440, 5, 'sound', function () {\r\n            if (sound) {\r\n                paper.game.sound.stopAll();\r\n                this.play('off');\r\n                sound = false;\r\n                sessionStorage.setItem('sound', 'off');\r\n            } else {\r\n                ambiance.play();\r\n                this.play('on');\r\n                sound = true;\r\n                sessionStorage.setItem('sound', 'on');\r\n            }\r\n\r\n        }, soundButton);\r\n\r\n        soundButton.animations.add('on', [0]);\r\n        soundButton.animations.add('off', [1]);\r\n\r\n        if (sound) {\r\n            soundButton.play('on');\r\n        } else {\r\n            soundButton.play('off');\r\n        }\r\n    },\r\n\r\n    start: function () {\r\n        socket.emit('avalable_player');\r\n\r\n        socket.on('game_id', function (data) {\r\n            console.log('game id: ' + data.gameId);\r\n            gameId = data.gameId;\r\n            if (data.gameOn) {\r\n                this.state.start('Game');\r\n            }\r\n        }.bind(this));\r\n\r\n        button.destroy();\r\n        langButton.text = \"\";\r\n        var waitText = paper.game.add.text(paper.game.world.centerX, paper.game.world.centerY, lang.WAITING_MENU, {fill: '#000000', font: 'bold 32px Almendra'});\r\n        waitText.anchor.setTo(0.5);\r\n        socket.on('game_on', function () {\r\n            this.state.start('Game');\r\n        }.bind(this));\r\n\r\n        ambiance.stop();\r\n        if (sound)\r\n            start.play();\r\n    }\r\n}\r\n";
}, /*!****************************!*\
  !*** ./src/states/Game.js ***!
  \****************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/states/Game.js */ 11));
}, /*!********************************************!*\
  !*** ../~/raw-loader!./src/states/Game.js ***!
  \********************************************/
function(n, r) {
    n.exports = "var map, all, ennemies, allies, tileGroup, arrows, wallSwitch = false;\r\nvar caracter1, caracter2, caracter3, caracter4, caracter5, tower1, tower2;\r\nvar ennemy1, ennemy2, ennemy3, ennemy4, ennemy5, ennemyTower1, ennemyTower2, explosions;\r\nvar wallCount = 0, wallButton, wallsArray = [], undo, sword1, sword2, pare;\r\nvar theirFlag = {x: 0, y: 0}, ourFlag, readyCheck, readyButton, readySwitch = false;\r\n\r\npaper.Game = function () {\r\n};\r\n\r\npaper.Game.prototype = {\r\n\r\n    create: function () {\r\n\r\n        var background = this.add.image(0, 0, 'background');\r\n\r\n        //tile map\r\n        tileGroup = this.add.group();\r\n        map = new Map(this, tileGroup);\r\n        map.spawnTiles();\r\n\r\n        // Sword sounds\r\n        sword1 = paper.game.add.audio('sword1');\r\n        sword2 = paper.game.add.audio('sword2');\r\n        pare = paper.game.add.audio('pare');\r\n\r\n        //groups\r\n        all = this.add.group();\r\n        allies = [];\r\n        ennemies = [];\r\n        arrows = this.add.group();\r\n        arrows.createMultiple(90, 'arrow');\r\n\r\n        ourFlag = this.add.sprite(240, 776, 'flags');\r\n        ourFlag.scale.setTo(2);\r\n        ourFlag.anchor.setTo(0.5, 0.5);\r\n        ourFlag.animations.add('float', [4, 5, 6, 7]);\r\n        ourFlag.animations.play('float', 5, true);\r\n        all.add(ourFlag);\r\n\r\n        explosions = this.add.group();\r\n        explosions.createMultiple(90, 'kaboom');\r\n        explosions.forEach(function (kaboom) {\r\n            kaboom.anchor.x = 0.4;\r\n            kaboom.anchor.y = 0.4;\r\n            kaboom.animations.add('kaboom');\r\n        });\r\n\r\n        //buttons\r\n        var warriorButton = this.add.image(-16, 772, 'warrior');\r\n        warriorButton.scale.setTo(2);\r\n        wallButton = this.add.button(49, 772, 'walle', wallAction, this, 1, 0, 2);\r\n        var towerButton = this.add.image(96, 772, 'tower');\r\n\r\n        // Drag buttons\r\n        var warriorDrag = this.add.image(16, 804, 'warrior');\r\n        warriorDrag.anchor.setTo(0.5, 0.5);\r\n        warriorDrag.scale.setTo(2);\r\n        warriorDrag.inputEnabled = true;\r\n        warriorDrag.input.enableDrag();\r\n        warriorDrag.events.onDragStart.add(unselect, this);\r\n        warriorDrag.events.onDragUpdate.add(onDragTower, this);\r\n        warriorDrag.events.onDragStop.add(addWarrior, this);\r\n\r\n        var towerDrag = this.add.image(120, 812, 'tower');\r\n        towerDrag.anchor.setTo(0.5, 0.5);\r\n        towerDrag.inputEnabled = true;\r\n        towerDrag.input.enableDrag();\r\n        towerDrag.events.onDragStart.add(unselect, this);\r\n        towerDrag.events.onDragUpdate.add(onDragTower, this);\r\n        towerDrag.events.onDragStop.add(addTower, this);\r\n\r\n        function onDragTower(sprite) {\r\n            if (sprite.y < 384) {\r\n                sprite.tint = 0xFF7F50;\r\n            } else {\r\n                sprite.tint = 0xFFFFFF;\r\n            }\r\n        }\r\n\r\n        // Caracter selection handler\r\n        function unselect() {\r\n            allies.forEach(function (caracter) {\r\n                caracter.selected = false;\r\n            }, this);\r\n        }\r\n\r\n        // i for warriors, j for towers\r\n        var i = 1, j = 1;\r\n\r\n        function addWarrior(pointer) {\r\n            if (pointer.y > 384) {\r\n                window['caracter' + i] = new Caracter(Math.floor(pointer.x / 32) * 32 + 16, Math.floor(pointer.y / 32) * 32 + 16, i);\r\n                window['caracter' + i].selected = true;\r\n                all.sort('y', Phaser.Group.SORT_ACENDING);\r\n\r\n                i++;\r\n                warriorDrag.x = 16;\r\n                warriorDrag.y = 804;\r\n                warriorDrag.tint = '0xFFFFFF';\r\n                if (i == 6) {\r\n                    warriorDrag.kill();\r\n                    warriorButton.kill();\r\n                    readyCheck();\r\n                }\r\n                undo = window['caracter' + i];\r\n            }else {\r\n                warriorDrag.x = 16;\r\n                warriorDrag.y = 804;\r\n                warriorDrag.tint = '0xFFFFFF';\r\n            }\r\n        }\r\n\r\n        function addTower(pointer) {\r\n            if (pointer.y > 384) {\r\n                window['tower' + j] = new Tower(Math.round(pointer.x / 32) * 32, Math.round(pointer.y / 32) * 32, j, ennemies);\r\n                allies.push(window['tower' + j]);\r\n                all.sort('x', Phaser.Group.SORT_ACENDING);\r\n                all.sort('y', Phaser.Group.SORT_ACENDING);\r\n                map.setObstacle(Math.round(pointer.x / 32) * 32, Math.round(pointer.y / 32) * 32);\r\n                window['tower' + j].arrowAttack;\r\n                j++;\r\n                towerDrag.x = 120;\r\n                towerDrag.y = 812;\r\n                towerDrag.tint = '0xFFFFFF';\r\n                if (j == 3) {\r\n                    readyCheck();\r\n                    towerDrag.kill();\r\n                    towerButton.kill();\r\n                }\r\n                undo = window['tower' + j];\r\n            } else {\r\n                towerDrag.x = 120;\r\n                towerDrag.y = 812;\r\n                towerDrag.tint = '0xFFFFFF';\r\n            }\r\n        }\r\n\r\n        function wallAction() {\r\n            wallSwitch = !wallSwitch;\r\n            if (wallSwitch)\r\n                this.input.addMoveCallback(map.buildWall, this);\r\n        }\r\n        readyCheck = function () {\r\n            if (wallCount > 13 && i > 5 && j > 2) {\r\n                console.log('pass');\r\n                readyButton = this.add.button(416, 768, 'ready', readyAction);\r\n            } else {\r\n                console.log('pass pas')\r\n            }\r\n\r\n        }.bind(this);\r\n    },\r\n\r\n    update: function () {\r\n\r\n        this.physics.arcade.collide(arrows, all);\r\n\r\n        if (caracter1)\r\n            caracter1.getFlag();\r\n        if (caracter2)\r\n            caracter2.getFlag();\r\n        if (caracter3)\r\n            caracter3.getFlag();\r\n        if (caracter4)\r\n            caracter4.getFlag();\r\n        if (caracter5)\r\n            caracter5.getFlag();\r\n\r\n        if (this.physics.arcade.distanceToXY(theirFlag, 240, 774) < 16) {\r\n            socket.emit('we_have_a_winner', {gameId: gameId});\r\n            var winner = this.add.text(paper.game.world.centerX, paper.game.world.centerY, lang.WIN, {fill: '#000000', font: 'bold 32px Almendra'});\r\n            winner.anchor.setTo(0.5);\r\n            paper.game.paused = true;\r\n        }\r\n    }\r\n}\r\n";
}, /*!********************************!*\
  !*** ./src/states/GameOver.js ***!
  \********************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/states/GameOver.js */ 13));
}, /*!************************************************!*\
  !*** ../~/raw-loader!./src/states/GameOver.js ***!
  \************************************************/
function(n, r) {
    n.exports = "paper.GameOver = function () {\r\n};\r\n\r\npaper.GameOver.prototype = {\r\n\r\n    preload: function () {\r\n    },\r\n\r\n    create: function () {\r\n    },\r\n\r\n    startLoad: function () {\r\n    },\r\n\r\n    update: function () {\r\n    }\r\n}\r\n";
}, /*!********************************!*\
  !*** ./src/states/Language.js ***!
  \********************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/states/Language.js */ 15));
}, /*!************************************************!*\
  !*** ../~/raw-loader!./src/states/Language.js ***!
  \************************************************/
function(n, r) {
    n.exports = "paper.Language = function () {\r\n};\r\n\r\npaper.Language.prototype = {\r\n\r\n    create: function () {\r\n\r\n        var background = this.add.image(0, 0, 'paper');\r\n\r\n        var backButton = paper.game.add.text(400, 740, lang.RETURN, {fill: '#000000', font: 'bold 24px Almendra'});\r\n        backButton.inputEnabled = true;\r\n        backButton.anchor.setTo(0.5);\r\n        backButton.events.onInputDown.add(function () {\r\n            this.state.start('Menu');\r\n        }, this);\r\n\r\n        var soundButton = this.add.button(440, 5, 'sound', function () {\r\n            if (sound) {\r\n                paper.game.sound.stopAll();\r\n                this.play('off');\r\n                sound = false;\r\n                sessionStorage.setItem('sound', 'off');\r\n            } else {\r\n                ambiance.play();\r\n                this.play('on');\r\n                sound = true;\r\n                sessionStorage.setItem('sound', 'on');\r\n            }\r\n\r\n        }, soundButton);\r\n\r\n        soundButton.animations.add('on', [0]);\r\n        soundButton.animations.add('off', [1]);\r\n\r\n        if (sound) {\r\n            soundButton.play('on');\r\n        } else {\r\n            soundButton.play('off');\r\n        }\r\n\r\n        var frButton = paper.game.add.text(paper.game.world.centerX, paper.game.world.centerY - 50, lang.FR, {fill: '#000000', font: 'bold 32px Almendra'});\r\n        paper.game.physics.arcade.enable(frButton);\r\n        frButton.inputEnabled = true;\r\n        frButton.anchor.setTo(0.5);\r\n        frButton.events.onInputDown.add(function () {\r\n            frButton.text = '<' + lang.FR + '>';\r\n            enButton.text = lang.EN;\r\n            sessionStorage.setItem('lang', 'fr');\r\n            lang = fr;\r\n        }, this);\r\n\r\n        var enButton = paper.game.add.text(paper.game.world.centerX, paper.game.world.centerY, lang.EN, {fill: '#000000', font: 'bold 32px Almendra'});\r\n        paper.game.physics.arcade.enable(enButton);\r\n        enButton.inputEnabled = true;\r\n        enButton.anchor.setTo(0.5);\r\n        enButton.events.onInputDown.add(function () {\r\n            enButton.text = '<' + lang.EN + '>';\r\n            frButton.text = lang.FR;\r\n            sessionStorage.setItem('lang', 'en');\r\n            lang = en;\r\n        }, this);\r\n\r\n        if (sessionStorage.getItem(\"lang\") != null) {\r\n            sessionStorage.getItem(\"lang\") == 'fr' ? frButton.text = '<' + lang.FR + '>' : enButton.text = '<' + lang.EN + '>';\r\n        } else {\r\n            enButton.text = '<' + lang.EN + '>';\r\n        }\r\n    }\r\n}\r\n";
}, /*!*********************************!*\
  !*** ./src/entites/Caracter.js ***!
  \*********************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/entites/Caracter.js */ 17));
}, /*!*************************************************!*\
  !*** ../~/raw-loader!./src/entites/Caracter.js ***!
  \*************************************************/
function(n, r) {
    n.exports = "var Caracter = function (x, y, name) {\r\n    Phaser.Sprite.call(this, paper.game, x, y, 'warrior');\r\n    paper.game.physics.arcade.enable(this);\r\n    this.body.immovable = true;\r\n    this.inputEnabled = true;\r\n    this.scale.setTo(2);\r\n    this.input.priorityID = 1;\r\n    this.anchor.setTo(0.5, 0.5);\r\n    this.selected = false;\r\n    this.newPosX = this.x;\r\n    this.newPosY = this.y;\r\n    this.pathx = this.x / 32;\r\n    this.pathy = this.y / 16;\r\n    this.path = new EasyStar.js();\r\n    this.path.setAcceptableTiles([0]);\r\n    this.path.setIterationsPerCalculation(1000);\r\n    this.health = 100;\r\n    this.name = name;\r\n    allies.push(this);\r\n    all.add(this);\r\n    // Anim\r\n    this.animations.add('south', [0, 1, 2, 3, 4]);\r\n    this.animations.add('north', [5, 6, 7, 8, 9]);\r\n    this.animations.add('east', [10, 11, 12, 13, 14]);\r\n    this.animations.add('west', [15, 16, 17, 18, 19]);\r\n    this.animations.add('sattack', [0, 20, 21, 22, 23, 24]);\r\n    this.animations.add('nattack', [5, 25, 26, 27, 28, 29]);\r\n    this.animations.add('eattack', [10, 30, 31, 32, 33, 34]);\r\n    this.animations.add('wattack', [15, 35, 36, 37, 38, 39]);\r\n\r\n    this.select = function () {\r\n        allies.forEach(function (caracter) {\r\n            caracter.selected = false;\r\n        });\r\n        this.selected = true;\r\n    };\r\n    this.events.onInputDown.add(this.select, this);\r\n\r\n    paper.game.input.onUp.add(function (pointer) {\r\n        if (this.selected && pointer.x < 477 && pointer.y < 797 && pointer.x > 3 && pointer.y > 3) {\r\n            this.newPosX = pointer.x;\r\n            this.newPosY = pointer.y;\r\n\r\n            this.move;\r\n        }\r\n    }, this);\r\n\r\n    this.move = paper.game.time.events.loop(300, function () {\r\n        this.path.setGrid(map.grid);\r\n        this.path.findPath(\r\n            Math.round(this.x / 32),\r\n            Math.round(this.y / 16),\r\n            Math.abs(Math.round(this.newPosX / 32)), //TODO: Bug to fix\r\n            Math.abs(Math.round(this.newPosY / 16)),\r\n            function (path) {\r\n                if (path === null) {\r\n                    this.body.velocity.x = 0;\r\n                    this.body.velocity.y = 0;\r\n                    this.move.pause;\r\n                }\r\n                if (path && path[1]) {\r\n                    this.move.resume;\r\n                    paper.game.physics.arcade.moveToXY(this, path[1].x * 32, path[1].y * 16);\r\n                    walkAnimation(this, path[0].x, path[1].x, path[0].y, path[1].y);\r\n                    all.sort('x', Phaser.Group.SORT_ACENDING);\r\n                    all.sort('y', Phaser.Group.SORT_ACENDING);\r\n\r\n                    // Set obstacle on the caracter and emit\r\n                    if (this.pathx != path[0].x || this.pathy != path[0].y) {\r\n                        socket.emit('is_moving', {\r\n                            nextx: path[1].x * 32,\r\n                            nexty: path[1].y * 16,\r\n                            name: this.name,\r\n                            gameId: gameId\r\n                        });\r\n                        // map.caracterObstacle(this.pathx, this.pathy, 0);\r\n                    }\r\n                    // map.caracterObstacle(path[0].x, path[0].y, 1);\r\n                    this.pathx = path[0].x;\r\n                    this.pathy = path[0].y;\r\n                }\r\n                else {\r\n                    if (this.body)\r\n                        this.body.velocity.setTo(0, 0);\r\n                }\r\n            }.bind(this));\r\n        this.path.calculate();\r\n    }, this);\r\n\r\n    this.attack = paper.game.time.events.loop(Phaser.Timer.SECOND, function () {\r\n        ennemies.forEach(function (ennemy) {\r\n            if (ennemy.alive && paper.game.physics.arcade.distanceBetween(this, ennemy) < 32) {\r\n                socket.emit('attack', {\r\n                    name: ennemy.name,\r\n                    damage: paper.game.rnd.integerInRange(4, 10),\r\n                    gameId: gameId\r\n                });\r\n                fightAnimation(this, ennemy);\r\n                swordSound();\r\n                console.log('fight');\r\n            }\r\n        }, this);\r\n    }, this);\r\n\r\n    this.getFlag = function () {\r\n        if (paper.game.physics.arcade.distanceBetween(this, theirFlag) < 32) {\r\n            socket.emit('got_flag', {name: this.name, gameId: gameId});\r\n            theirFlag.x = this.x;\r\n            theirFlag.y = this.y - 24;\r\n        }\r\n    }.bind(this);\r\n\r\n    this.damage = function (lp) {\r\n        this.health -= lp;\r\n        if (this.health < 0) {\r\n            if (this.alive)\r\n                this.kill();\r\n            socket.emit('death', {name: this.name, gameId: gameId});\r\n        }\r\n    };\r\n\r\n    this.events.onKilled.add(function () {\r\n        socket.emit('death', {name: this.name, gameId: gameId});\r\n        var skeleton = paper.game.add.sprite(this.x, this.y, 'skeleton');\r\n        this.x = 0;\r\n        this.y = 400;\r\n        skeleton.anchor.setTo(0.5, 0.5);\r\n        all.add(skeleton);\r\n        skeleton.animations.add('death', [40, 41, 42, 43, 44, 45, 46, 47, 48, 49]);\r\n        skeleton.animations.play('death', 10, false);\r\n    }, this);\r\n};\r\n\r\nCaracter.prototype = Object.create(Phaser.Sprite.prototype);\r\nCaracter.prototype.constructor = Caracter;\r\n";
}, /*!*******************************!*\
  !*** ./src/entites/Ennemy.js ***!
  \*******************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/entites/Ennemy.js */ 19));
}, /*!***********************************************!*\
  !*** ../~/raw-loader!./src/entites/Ennemy.js ***!
  \***********************************************/
function(n, r) {
    n.exports = "var Ennemy = function (x, y, name) {\r\n    Phaser.Sprite.call(this, paper.game, x, y, 'blueWarrior');\r\n    paper.game.physics.arcade.enable(this);\r\n    this.body.immovable = true;\r\n    this.scale.setTo(2);\r\n    this.anchor.setTo(0.5, 0.5);\r\n    this.newPosX = this.x;\r\n    this.newPosY = this.y;\r\n    this.pathx = this.x / 32;\r\n    this.pathy = this.y / 16;\r\n    this.path = new EasyStar.js();\r\n    this.path.setAcceptableTiles([0]);\r\n    this.path.setIterationsPerCalculation(1000);\r\n    this.health = 100;\r\n    this.animations.add('iddle', [0]);\r\n    this.animations.add('south', [0, 1, 2, 3, 4]);\r\n    this.animations.add('north', [5, 6, 7, 8, 9]);\r\n    this.animations.add('east', [10, 11, 12, 13, 14]);\r\n    this.animations.add('west', [15, 16, 17, 18, 19]);\r\n    this.animations.add('sattack', [0, 20, 21, 22, 23, 24]);\r\n    this.animations.add('nattack', [5, 25, 26, 27, 28, 29]);\r\n    this.animations.add('eattack', [10, 30, 31, 32, 33, 34]);\r\n    this.animations.add('wattack', [15, 35, 36, 37, 38, 39]);\r\n    this.name = name;\r\n    ennemies.push(this);\r\n    all.add(this);\r\n\r\n    this.move = paper.game.time.events.loop(300, function () {\r\n        this.path.setGrid(map.grid);\r\n        this.path.findPath(\r\n            Math.round(this.x / 32),\r\n            Math.round(this.y / 16),\r\n            Math.abs(Math.round(this.newPosX / 32)), //TODO: Bug to fix\r\n            Math.abs(Math.round(this.newPosY / 16)),\r\n            function (path) {\r\n                if (path === null) {\r\n                    this.body.velocity.x = 0;\r\n                    this.body.velocity.y = 0;\r\n                    this.move.pause;\r\n                }\r\n                if (path && path[1]) {\r\n                    this.move.resume;\r\n                    paper.game.physics.arcade.moveToXY(this, path[1].x * 32, path[1].y * 16);\r\n\r\n                    // Set obstacle on the caracter\r\n                    // if (this.pathx != path[0].x || this.pathy != path[0].y)\r\n                        // map.caracterObstacle(this.pathx, this.pathy, 0);\r\n                    // map.caracterObstacle(path[0].x, path[0].y, 1);\r\n\r\n                    walkAnimation(this, path[0].x, path[1].x, path[0].y, path[1].y);\r\n                    all.sort('x', Phaser.Group.SORT_ACENDING);\r\n                    all.sort('y', Phaser.Group.SORT_ACENDING);\r\n                }\r\n                else {\r\n                    this.body.velocity.x = 0;\r\n                    this.body.velocity.y = 0;\r\n                }\r\n            }.bind(this));\r\n        this.path.calculate();\r\n    }, this);\r\n\r\n    this.attack = paper.game.time.events.loop(Phaser.Timer.SECOND, function () {\r\n\r\n        allies.forEach(function (ennemy) {\r\n            if (ennemy.alive && paper.game.physics.arcade.distanceBetween(this, ennemy) < 32) {\r\n                fightAnimation(this, ennemy);\r\n                swordSound();\r\n            }\r\n        }, this);\r\n    }, this);\r\n\r\n    this.events.onKilled.add(function () {\r\n        var skeleton = paper.game.add.sprite(this.x, this.y, 'skeleton');\r\n        this.x = 0;\r\n        this.y = 400;\r\n        skeleton.anchor.setTo(0.5, 0.5);\r\n        skeleton.animations.add('death', [40, 41, 42, 43, 44, 45, 46, 47, 48, 49]);\r\n        skeleton.animations.play('death', 10, false);\r\n    }, this);\r\n};\r\n\r\nEnnemy.prototype = Object.create(Phaser.Sprite.prototype);\r\nEnnemy.prototype.constructor = Ennemy;\r\n";
}, /*!****************************!*\
  !*** ./src/entites/Map.js ***!
  \****************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/entites/Map.js */ 21));
}, /*!********************************************!*\
  !*** ../~/raw-loader!./src/entites/Map.js ***!
  \********************************************/
function(n, r) {
    n.exports = "var Map = function (game, group) {\r\n\r\n    this.game = game;\r\n    this.group = group;\r\n\r\n    var wallGroup = paper.game.add.group();\r\n    wallGroup.createMultiple(14, 'walle');\r\n    wallGroup.forEach(function (wall) {\r\n        wall.anchor.setTo(0.33, 0.5);\r\n    });\r\n\r\n    this.grid = [];\r\n    for (var i = 0; i < 54; i++) {\r\n        var t = [];\r\n        for (var j = 0; j < 16; j++) {\r\n            t.push(0);\r\n        }\r\n        this.grid.push(t);\r\n    }\r\n\r\n    this.spawnTiles = function () {\r\n        for (var xt = 0; xt < 16 * 32; xt += 32) {\r\n            for (var yt = 0; yt < 54 * 16; yt += 16) {\r\n                var tile = this.game.add.sprite(xt, yt, 'tile', 0, this.group);\r\n                tile.anchor.setTo(0.5);\r\n                tile.inputEnabled = true;\r\n                tile.walled = false;\r\n            }\r\n        }\r\n    }.bind(this);\r\n\r\n    this.setObstacle = function (tileY, tileX) {\r\n        this.grid[tileX / 16][tileY / 32] = 1;\r\n    }.bind(this);\r\n\r\n    this.caracterObstacle = function (tileY, tileX, nb) {\r\n        this.grid[tileX][tileY] = nb;\r\n    }.bind(this);\r\n\r\n    this.buildWall = function (pointer) {\r\n        tileGroup.forEach(function (tile) {\r\n            tile.events.onInputOver.add(makeWall, this);\r\n            function makeWall(tile, x, y) {\r\n                if (wallSwitch && wallCount > 13) {\r\n                    wallButton.kill();\r\n                    readyCheck();\r\n                    wallSwitch = false;\r\n                }\r\n                if (wallCount < 14 && pointer.isDown && wallSwitch == true) {\r\n                    if (tile.walled == false && tile.y > 384 && tile.y < 752) {\r\n                        window['walle' + wallCount] = wallGroup.getFirstExists(false);\r\n                        window['walle' + wallCount].reset(tile.x, tile.y);\r\n                        wallGroup.remove(window['walle' + wallCount]);\r\n                        all.add(window['walle' + wallCount]);\r\n                        all.sort('x', Phaser.Group.SORT_ACENDING);\r\n                        all.sort('y', Phaser.Group.SORT_ACENDING);\r\n                        // allies.push(window['walle' + wallCount]); // Later\r\n                        wallCount++;\r\n                        tile.walled = true;\r\n                        map.setObstacle(tile.x, tile.y);\r\n                        wallsArray.push({x: tile.x, y: tile.y, name: wallCount});\r\n                        //undo = window['walle' + wallCount];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nMap.prototype = Object.create(Phaser.Sprite.prototype);\r\nMap.prototype.constructor = Map;\r\n";
}, /*!******************************!*\
  !*** ./src/entites/Tower.js ***!
  \******************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/entites/Tower.js */ 23));
}, /*!**********************************************!*\
  !*** ../~/raw-loader!./src/entites/Tower.js ***!
  \**********************************************/
function(n, r) {
    n.exports = "var Tower = function (x, y, name, ennemyGroup) {\r\n    Phaser.Sprite.call(this, paper.game, x, y, 'tower');\r\n    paper.game.physics.arcade.enable(this);\r\n    this.body.immovable = true;\r\n    this.name = name;\r\n    this.anchor.setTo(0.33, 0.5);\r\n    this.ennemies = ennemyGroup;\r\n    all.add(this);\r\n\r\n    this.arrowAttack = paper.game.time.events.loop(Phaser.Timer.SECOND * 3, function () {\r\n        this.ennemies.forEach(function (ennemy) {\r\n            if (ennemy.alive && paper.game.physics.arcade.distanceBetween(this, ennemy) < 150\r\n                || paper.game.physics.arcade.distanceBetween(this, ennemy) < -150) {\r\n                var canon = paper.game.add.audio('canon');\r\n                if (sound)\r\n                    canon.play();\r\n                var arrow = arrows.getFirstExists(false);\r\n                arrow.reset(this.x, this.y);\r\n                paper.game.physics.arcade.enable(arrow);\r\n                arrow.body.onCollide = new Phaser.Signal();\r\n                arrow.body.onCollide.add(function () {\r\n                    canon.stop();\r\n                    var explosion = paper.game.add.audio('explosion');\r\n                    if (sound)\r\n                        explosion.play();\r\n                    var kaboom = explosions.getFirstExists(false);\r\n                    kaboom.reset(ennemy.body.x, ennemy.body.y);\r\n                    kaboom.alpha = 0.7;\r\n                    kaboom.play('kaboom', 30, false, true);\r\n                    if (this.ennemies == ennemies)\r\n                        socket.emit('attack', {\r\n                            name: ennemy.name,\r\n                            damage: paper.game.rnd.integerInRange(14, 22),\r\n                            gameId: gameId\r\n                        });\r\n                    arrow.kill();\r\n                }, this);\r\n                arrow.rotation = paper.game.physics.arcade.angleToXY(arrow, ennemy.x, ennemy.y) + 1.6;\r\n                paper.game.physics.arcade.moveToObject(arrow, ennemy, 300);\r\n            }\r\n        }, this);\r\n    }, this);\r\n};\r\n\r\nTower.prototype = Object.create(Phaser.Sprite.prototype);\r\nTower.prototype.constructor = Tower;\r\n\r\n";
}, /*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/main.js */ 25));
}, /*!*************************************!*\
  !*** ../~/raw-loader!./src/main.js ***!
  \*************************************/
function(n, r) {
    n.exports = "var gameId, lang, sound;\r\n\r\nif (sessionStorage['lang'] != 'undefined') {\r\n    if ( sessionStorage.lang == 'fr ') {\r\n        lang = fr;\r\n    } else {\r\n        lang = en;\r\n    }\r\n} else {\r\n    lang = en;\r\n}\r\n\r\nif (sessionStorage['sound'] != 'undefined') {\r\n    if (sessionStorage.sound  == 'on') {\r\n        sound = true;\r\n    } else {\r\n        sound = false;\r\n    }\r\n} else {\r\n    sound = true;\r\n}\r\n\r\npaper.game = new Phaser.Game(480, 800, Phaser.AUTO, '', null, false, false);\r\npaper.game.state.add('Preload', paper.Preload);\r\npaper.game.state.add('Menu', paper.Menu);\r\npaper.game.state.add('Language', paper.Language);\r\npaper.game.state.add('Game', paper.Game);\r\npaper.game.state.add('GameOver', paper.GameOver);\r\npaper.game.state.start('Preload');\r\npaper.game.msg = '';";
}, /*!******************************!*\
  !*** ./src/socketHandler.js ***!
  \******************************/
function(n, r, a) {
    a(/*! !../~/script-loader/addScript.js */ 2)(a(/*! !../~/raw-loader!./src/socketHandler.js */ 27));
}, /*!**********************************************!*\
  !*** ../~/raw-loader!./src/socketHandler.js ***!
  \**********************************************/
function(n, r) {
    n.exports = "try {\r\n    socket = io.connect('https://flagwarriors.herokuapp.com');\r\n} catch (e) {\r\n    paper.game.msg = lang.NO_CONNECTION;\r\n    gameId = false;\r\n}\r\nvar ennemyData = false;\r\n\r\nfunction readyAction(button) {\r\n    readySwitch = true;\r\n    tileGroup.removeAll();\r\n    button.destroy();\r\n    socket.emit('ready', {\r\n            warriors: [\r\n                {x: caracter1.x, y: caracter1.y, name: '1'},\r\n                {x: caracter2.x, y: caracter2.y, name: '2'},\r\n                {x: caracter3.x, y: caracter3.y, name: '3'},\r\n                {x: caracter4.x, y: caracter4.y, name: '4'},\r\n                {x: caracter5.x, y: caracter5.y, name: '5'}\r\n            ],\r\n            towers: [\r\n                {x: tower1.x, y: tower1.y, name: '1'},\r\n                {x: tower2.x, y: tower2.y, name: '2'}\r\n            ],\r\n            walls: wallsArray,\r\n            gameId: gameId\r\n        }\r\n    );\r\n\r\n    if (ennemyData) {\r\n        addEnnemies(ennemyData);\r\n    } else {\r\n        paper.game.waitText1 = paper.game.add.text(paper.game.world.centerX, paper.game.world.centerY - 32, lang.WAITING_READY, {fill: '#000000', font: 'bold 32px Almendra'});\r\n        paper.game.waitText1.anchor.setTo(0.5);\r\n        // paper.game.paused = true;\r\n    }\r\n}\r\n\r\nsocket.on('ready', function (data) {\r\n    ennemyData = data;\r\n    if (readySwitch) {\r\n        addEnnemies(ennemyData);\r\n        ennemyData = false;\r\n    }\r\n\r\n    if (paper.game.waitText1)\r\n        paper.game.waitText1.destroy();\r\n\r\n    if (paper.game.waitText2)\r\n        paper.game.waitText2.destroy();\r\n\r\n    paper.game.paused = false;\r\n});\r\n\r\nfunction addEnnemies(data) {\r\n    readyButton.destroy();\r\n    data.warriors.forEach(function (warrior) {\r\n        window['ennemy' + warrior.name] = new Ennemy(480 - warrior.x, 800 - warrior.y, warrior.name);\r\n        ennemies.push(window['ennemy' + warrior.name]);\r\n        all.add(window['ennemy' + warrior.name]);\r\n    });\r\n\r\n    data.towers.forEach(function (tower) {\r\n        window['ennemyTower' + tower.name] = new Tower(480 - tower.x, 800 - tower.y, tower.name, allies);\r\n        // ennemies.push(window['ennemyTower' + tower.name]); // Later\r\n        all.add(window['ennemyTower' + tower.name]);\r\n        map.setObstacle(window['ennemyTower' + tower.name].x, window['ennemyTower' + tower.name].y);\r\n    });\r\n\r\n    data.walls.forEach(function (wall) {\r\n        window['wallen' + wall.name] = paper.game.add.sprite(480 - wall.x, 800 - wall.y, 'walle');\r\n        paper.game.physics.arcade.enable(window['wallen' + wall.name]);\r\n        window['wallen' + wall.name].anchor.setTo(0.5, 0.5);\r\n        // ennemies.push(window['wallen' + tower.name]); // Later\r\n        all.add(window['wallen' + wall.name]);\r\n        ennemies.sort('x', Phaser.Group.SORT_ACENDING);\r\n        ennemies.sort('y', Phaser.Group.SORT_ACENDING);\r\n        window['wallen' + wall.name].body.immovable = true;\r\n        map.setObstacle(480 - wall.x, 800 - wall.y);\r\n    });\r\n\r\n    theirFlag = paper.game.add.sprite(240, 0, 'flags');\r\n    theirFlag.scale.setTo(2);\r\n    theirFlag.animations.add('float', [9, 10, 11, 12]);\r\n    theirFlag.animations.play('float', 5, true);\r\n    all.add(theirFlag);\r\n\r\n    socket.on('is_moving', function (data) {\r\n        window['ennemy' + data.name].newPosX = Math.abs(480 - data.nextx);\r\n        window['ennemy' + data.name].newPosY = Math.abs(800 - data.nexty);\r\n    });\r\n\r\n    socket.on('set_obstacle', function (data) {\r\n        map.caracterObstacle(16 - data.y, 54 - data.x, data.value);\r\n    });\r\n\r\n    socket.on('attack', function (data) {\r\n        window['caracter' + data.name].damage(data.damage);\r\n    });\r\n\r\n    socket.on('got_flag', function (data) {\r\n        ourFlag.x = window['ennemy' + data.name].x;\r\n        ourFlag.y = window['ennemy' + data.name].y - 24;\r\n    });\r\n\r\n    socket.on('death', function (data) {\r\n        window['ennemy' + data.name].kill();\r\n    });\r\n\r\n    socket.on('we_have_a_winner', function () {\r\n        var winner = paper.game.add.text(paper.game.world.centerX, paper.game.world.centerY, lang.LOOSE, {fill: '#000000', font: 'bold 32px Almendra'});\r\n        winner.anchor.setTo(0.5);\r\n        paper.game.paused = true;\r\n\r\n    });\r\n}\r\n\r\n";
} ]);